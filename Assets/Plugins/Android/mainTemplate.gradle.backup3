apply plugin: 'com.android.library'
apply from: '../shared/keepUnitySymbols.gradle'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Android Resolver Dependencies Start
    implementation 'com.google.android.gms:play-services-base:18.7.2' // Assets/Firebase/Editor/AppDependencies.xml:17
    // implementation 'com.google.firebase:firebase-analytics:22.4.0' // Assets/Firebase/Editor/AuthDependencies.xml:15
    implementation 'com.google.firebase:firebase-analytics:23.0.0' // Assets/Firebase/Editor/FirestoreDependencies.xml:15
    implementation 'com.google.firebase:firebase-app-unity:13.0.0' // Assets/Firebase/Editor/AppDependencies.xml:22
    implementation 'com.google.firebase:firebase-auth:23.2.0' // Assets/Firebase/Editor/AuthDependencies.xml:13
    implementation 'com.google.firebase:firebase-auth-unity:12.8.0' // Assets/Firebase/Editor/AuthDependencies.xml:20
    implementation 'com.google.firebase:firebase-common:22.0.0' // Assets/Firebase/Editor/AppDependencies.xml:13
    implementation 'com.google.firebase:firebase-firestore:26.0.0' // Assets/Firebase/Editor/FirestoreDependencies.xml:13
    implementation 'com.google.firebase:firebase-firestore-unity:13.0.0' // Assets/Firebase/Editor/FirestoreDependencies.xml:20
    // Android Resolver Dependencies End
    **DEPS**
}

android {
    ndkVersion "**NDKVERSION**"
    namespace "com.unity3d.player"
    ndkPath "**NDKPATH**"
    compileSdkVersion 34  // Or 33 if needed

    compileSdk **APIVERSION**

    // If Unity injected buildToolsVersion, you can safely delete it for AGP 8+
    // buildToolsVersion '**BUILDTOOLS**'

    defaultConfig {
        minSdk **MINSDK**
        targetSdk **TARGETSDK**
        ndk {
            debugSymbolLevel **DEBUGSYMBOLLEVEL**
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
    }

    // Gradle/AGP 8 compatible lint block
    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    // Still supported, though deprecated; Unity relies on it for streaming assets
    androidResources {
        noCompress = **BUILTIN_NOCOMPRESS** + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    // Merge of your previous extra android {} with exclusions
    packaging {
        // Classic syntax still works on AGP 8
        exclude ('/lib/arm64-v8a/*' + '*')
        exclude ('/lib/armeabi/*' + '*')
        exclude ('/lib/mips/*' + '*')
        exclude ('/lib/mips64/*' + '*')
        exclude ('/lib/x86/*' + '*')
        exclude ('/lib/x86_64/*' + '*')
    }

compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
}


    // Put resolution strategy & excludes here to avoid duplicate config blocks
    configurations.all {
        // global exclude
        exclude group: 'androidx.datastore', module: 'datastore-core-jvm'

        resolutionStrategy {
            force 'androidx.datastore:datastore-core-android:1.1.3'
            force 'androidx.credentials:credentials:1.2.0'
        }
    }
}

**PACKAGING**
**IL_CPP_BUILD_SETUP**
**SOURCE_BUILD_SETUP**
**EXTERNAL_SOURCES**
